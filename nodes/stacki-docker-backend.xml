<?xml version="1.0" standalone="no"?>

<kickstart>


	<description>
	Your stacki-docker pallet description here
	</description>

	<si_copyright>
	(c) 2006 - 2016 StackIQ Inc.
	All rights reserved. stacki(r) v3.1 www.stacki.com
	</si_copyright>

<package disable="1">iwl*</package>
<package disable="1">ivtv*</package>
<package meta="1">@core</package>

<post cond="sync.hosts">
<file name="/etc/hosts">
<eval>
cat /etc/hosts
</eval>
</file>
</post>

<post>
mkdir -p /etc/security/ca

<file name="/etc/docker/ca-key.pem">
<eval>
cat /etc/security/ca/ca.key
</eval>
</file>

<file name="/etc/docker/ca.cfg">
<eval>
cat /etc/security/ca/ca.cfg
</eval>
</file>

<file name="/etc/docker/ca.pem">
<eval>
cat /etc/security/ca/ca.crt
</eval>
</file>

</post>

<post>
mkdir -p /etc/docker/certs.d

KEYDIR="/etc/docker/certs.d"

openssl genrsa -out ${KEYDIR}/server-key.pem 4096

openssl req -subj "/CN=&hostname;.&Kickstart_PrivateDNSDomain;" -sha256 -new \
	-key ${KEYDIR}/server-key.pem  -out ${KEYDIR}/server.csr

echo "subjectAltName = DNS:&hostname;.&Kickstart_PrivateDNSDomain;,DNS:localhost,IP:&hostaddr;,IP:127.0.0.1" > ${KEYDIR}/extfile.cnf
openssl x509 -req -days 365 -sha256 -in ${KEYDIR}/server.csr -CA /etc/docker/ca.pem -CAkey /etc/docker/ca-key.pem \
  -CAcreateserial -out ${KEYDIR}/server-cert.pem -extfile ${KEYDIR}/extfile.cnf

openssl genrsa -out ${KEYDIR}/client.key 4096
openssl req -new -x509 -text -key ${KEYDIR}/client.key -out ${KEYDIR}/client.cert -subj "/C=&Info_CertificateCountry;/ST=&Info_CertificateState;/L=&Info_CertificateLocality;/O=&Info_CertificateOrganization;/OU=&Kickstart_PrivateHostname;/CN=&Info_FQDN;"

chmod 0400 ${KEYDIR}/*key*
chmod 0444 ${KEYDIR}/*crt*
chmod 0444 ${KEYDIR}/*cert*
</post>

</kickstart>
